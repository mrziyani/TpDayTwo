@page "/posts"
@layout MainLayout
@using Front.Models
@using Front.Service
@using Blazored.LocalStorage
@inject IPostService PostService
@inject NavigationManager Navigation
@inject ILocalStorageService localStorage

<h3>All Posts</h3>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (posts?.Any() == true)
{
    <ul class="list-group">
        @foreach (var post in posts)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>@post.Title</span>
                <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewPostDetails(post.Id)">View</button>
            </li>
        }
    </ul>
}
else
{
    <p>No posts found.</p>
}

@code {
    private List<Post> posts;
    private bool loading = true;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        string token = await localStorage.GetItemAsync<string>("authToken");
        bool isLoggedIn = !string.IsNullOrEmpty(token);

        if (!isLoggedIn)
        {
            Navigation.NavigateTo("/errorlogin");
            return;
        }

        try
        {
            posts = await PostService.GetAllPostsAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading posts: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }


    private void ViewPostDetails(int postId)
    {
        Navigation.NavigateTo($"/post-details/{postId}");
    }
}